// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ToDoListReactApi.API.Data;

#nullable disable

namespace ToDoListReactApi.API.Migrations
{
    [DbContext(typeof(ToDoContext))]
    partial class ToDoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ToDoListReactApi.API.Models.ToDoTasks", b =>
                {
                    b.Property<int>("taskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("taskId"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("userId")
                        .HasColumnType("integer");

                    b.HasKey("taskId");

                    b.HasIndex("userId");

                    b.ToTable("ToDoTasks");

                    b.HasData(
                        new
                        {
                            taskId = 1,
                            Title = "Bug 1",
                            status = "Pending",
                            userId = 1
                        },
                        new
                        {
                            taskId = 2,
                            Title = "Task 1",
                            status = "Completed",
                            userId = 2
                        });
                });

            modelBuilder.Entity("ToDoListReactApi.API.Models.Users", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("userId"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("userId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            userId = 1,
                            name = "Maria"
                        },
                        new
                        {
                            userId = 2,
                            name = "John"
                        });
                });

            modelBuilder.Entity("ToDoListReactApi.API.Models.ToDoTasks", b =>
                {
                    b.HasOne("ToDoListReactApi.API.Models.Users", "users")
                        .WithMany("todotasks")
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("ToDoListReactApi.API.Models.Users", b =>
                {
                    b.Navigation("todotasks");
                });
#pragma warning restore 612, 618
        }
    }
}
